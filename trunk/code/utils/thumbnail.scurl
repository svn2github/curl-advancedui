||| Copyright (C) 1998-2008, Sumisho Computer Systems Corp. All Rights Reserved.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

|||
||| @authors Kodan Masaki, Hitoshi Okada
|||

||
|| create thumbnail as Pixmap
||
||  NOTE: 
||   -If background is "transparent", it might change black.
||   -You need to set "top" to valign option. 
{define-proc public inline {create-thumbnail 
                               v:Frame
                           }:Pixmap

    def bounds = {v.layout.get-bounds} 
    def (r2d, d) =
        {Renderer2d.create-offscreen 
            bounds.width,
            bounds.height,
            (1 / ({v.get-display-context}).pixel-size),
            use-host-rendering? = true
        }
    {v.draw r2d}
    {return {d.to-Pixmap}}
}

||
|| create thumbnail to url
||
{define-proc public inline {create-thumbnail-to-url
                               v:Frame, 
                               save-url:Url,
                               mime-type:String = "image/jpeg"
                           }:void
    
    def pixmap = {create-thumbnail v}
    def image-data = {ImageData}
    set image-data.pixmaps = {{Array-of Pixmap} pixmap}
    {image-data.save-to-url save-url, mime-type}
}
