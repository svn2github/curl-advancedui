||| Copyright (C) 1998-2008, Sumisho Computer Systems Corp. All Rights Reserved.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

|||
||| @author Yohei Yoshida
|||

{define-class public OscillatingCommandButton {inherits CommandButton}

  {local-option public image-placement:LabelImagePlacement
    {self.update-image-placement
        self._static-label,
        self._image-frame,
        image-placement
    }
  }

  field private _label-image:ImageShape
  field private _static-label:#Label
  field private _image-frame:Frame
  field private _resting?:bool = true
  field private _timer:Timer

  {constructor public {default
                          static-label:#Label = "",
                          label-image:Pixmap,
                          image-placement:LabelImagePlacement = LabelImagePlacement.right,
                          ...
                      }
    {construct-super
        {splice ...}
    }
    set self._static-label = static-label
    set self._label-image = {ImageShape
                                fixed-transformation? = false,
                                label-image
                            }
    def image-frame-width = {floor self._label-image.image.width * 1.30} * 1px
    def image-frame-height = {floor self._label-image.image.height * 1.30} * 1px
    set self._image-frame = {Frame
                                width = image-frame-width,
                                height = image-frame-height,
                                valign = "center",
                                halign = "center",
                                self._label-image
                            }

    {self.update-image-placement
        self._static-label,
        self._image-frame,
        image-placement
    }
    
    set self._timer =
        {self.animate
            repeat= 0,
            frequency = 20fps,
            {on TimerEvent do
                set self._label-image.pixmap-scale =
                    {Double2d
                        1.0 + ( 1 - 0.1 * (10 - self._timer.repeat)) * {sin (10 - self._timer.repeat) * 1rad} * 0.30 + 0.010,
                        1.0 + ( 1 - 0.1 * (10 - self._timer.repeat)) * {cos (10 - self._timer.repeat) * 1rad} * 0.30 + 0.010
                    }
                {if self._timer.repeat == 0 then
                    set self._label-image.pixmap-scale = {Double2d 1.0, 1.0}
                    set self._resting? = true
                }
            }
        }

    {self.add-event-handler
        {on PointerEnter do
            set self._timer.repeat = 10
        }
    }
    {self.add-event-handler
        {on FocusIn do
            set self._timer.repeat = 10
        }
    }
  }

  {method public {on-action e:Action}:void 
    {if self._resting? then
        set self._timer.repeat = 20
        set self._resting? = false
        {super.on-action e}
    }
  }

  {method private {update-image-placement
                      static-label:#Label,
                      image-frame:Frame,
                      image-placement:LabelImagePlacement
                  }:void    
    {if-non-null static-label = self._static-label then
        {unset static-label.valign}
        {unset static-label.halign}
    }
    {switch image-placement
     case LabelImagePlacement.right do
        set self.label =
            {HBox
                valign = "center",
                static-label,
                self._image-frame
            }
     case LabelImagePlacement.left do
        set self.label =
            {HBox
                valign = "center",
                self._image-frame,
                static-label
            }
     case LabelImagePlacement.top do
        set self.label =
            {VBox
                halign = "center",
                self._image-frame,
                static-label
            }
     case LabelImagePlacement.bottom do
        set self.label =
            {VBox
                halign = "center",
                static-label,
                self._image-frame
            }
     case LabelImagePlacement.overlap do
        set self.label =
            {OverlayBox
                self._image-frame,
                static-label
            }
        set self._static-label.valign = "center"
        set self._static-label.halign = "center"
    }
  }
}