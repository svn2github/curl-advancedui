||| Copyright (C) 1998-2008, Sumisho Computer Systems Corp. All Rights Reserved.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

|||
||| @authors Kodan Masaki, Hitoshi Okada
|||

{curl 6.0, 7.0 applet}
{curl-file-attributes character-encoding = "shift-jis"}
{applet manifest = "manifest.mcurl"}

{import * from COM.CURLAP.ADVANCED-UI.UTILS}
{api-version-switch
 case "7.0+" do
    || do nothing
 case "6.0+" do
    {import * from COM.CURL.GUI.STYLED-CONTROLS}
    {install-style-sheet {manifest-url "file", "DEFAULT-STYLE-SHEET"}}
}

{def base-frame = {Frame}}

{do
    def v = 
        {Frame 
            valign = "top", 
            {spaced-vbox
                background = "pink",
                {TextField width = 3cm},
                {ComboBox width = 3cm},
                {CommandButton label = "test"}
            }
        }

    def frame =
        {Frame width = 5cm, height = 5cm, 
            {spaced-vbox
                v,
                {CommandButton
                    label = "Show pixmap!",
                    height = 1cm,
                    {on Action do 
                        {create-thumbnail-to-url v, 
                            {url "images/thumbnail.jpg"}}
                        def view = 
                            {View {Frame width = 3cm, height = 2cm,
                                      background = {create-thumbnail v}}}
                        {view.show}
                    }
                }
            }
        }
    
    def tab-container = 
        {TabContainer
            {TabPane
                {Frame valign = "top", 
                    {spaced-vbox
                        background = "pink",
                        {TextField width = 3cm},
                        {text font-size = 28pt, 1}
                    }
                }
            },
            {TabPane
                {Frame valign = "top", 
                    {spaced-vbox
                        background = "yellow",
                        {TextField width = 3cm},
                        {text font-size = 28pt, 2}
                    }
                }
            },
            {TabPane
                {Frame valign = "top", 
                    {spaced-vbox
                        background = "red",
                        {TextField width = 3cm},
                        {text font-size = 28pt, 3}
                    }
                }
            }
        }


    {base-frame.add 
        {spaced-vbox 
            {text test1},
            frame,
            
            {text test2},
            {spaced-vbox
                tab-container,
                {CommandButton 
                    label = "Show thumbnails!",
                    height = 1cm,
                    {on Action do
                        def thumbnails = {{Array-of Frame}}
                        {for tp in tab-container.tab-panes do
                            {thumbnails.append 
                                {Frame width = 3cm, height = 2cm,
                                    border-width = 2pt, border-style = BorderStyle.double,
                                    background = {create-thumbnail (tp.content asa Frame)}}
                            }
                        }
                        def view = 
                            {View width = 10cm, height = 10cm, 
                                {spaced-vbox {splice thumbnails}}}
                        {view.show}
                    }
                }
            }
        },
        replace? = true
    }
}

{View 
    base-frame,
    visibility = "normal",
    {on WindowClose do
        {exit}
    }
}
